<?xml version="1.0" encoding="UTF-8"?>
<!-- 命名空间 window-preferences-xml catory-add 选择schemaLocation，key和schemaLocation名称一样 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<!-- 对于注解的Handler可以单个配置 实际开发中建议是使用组件扫描 -->
	<!-- <bean class="cn.itcast.ssm.controller.itemsController3"/> -->
	<!-- 可以扫描controller,service... 这里扫描controller，指定controller包 报错的原因是使用了Spring3.2 
		+JDK8，换成JDK6后解决了，这问题比较纠结 -->
	<context:component-scan base-package="cn.nsu.edu.qingshuyuxia.controller"></context:component-scan>

	<!-- 静态资源的解析
		包括：js,css,img
	 -->
	<mvc:resources location="/js/" mapping="/js/**"/>
	<mvc:resources location="/img/" mapping="/img/**"/>
	<mvc:resources location="/font/" mapping="/font/**"/>
	<mvc:resources location="/css/" mapping="/css/**"/>
	<mvc:resources location="/fonts/" mapping="/fonts/**"/>
	<mvc:resources location="/fonts-awesome/" mapping="/fonts-awesome/**"/>	
	
	
	<!-- 可以代替上边两个注解映射器和注解适配器配置 mvc:annotation-driven默认加载很多的参数绑定方法，比如json转换解析器就默认加载了 
		如果使用mvc:annotation-driven就不用配置上面的RequestMappingHandlerMapping和RequestMappingHandlerAdapter 
		实际开发时使用mvc:annotation-driven -->
	<mvc:annotation-driven/>


	<!-- 视图解析器 解析jsp，默认使用jstl标签，classpath下得有jstl的包 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置jsp路径的前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<!-- 配置jsp路径的后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>
	
	 <!-- 文件上传 
	 	注意:需要加入jar包，commons-fileupload,commons-io
	 -->
	 <bean id="multipartResolver"
	 	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	 	<!-- 设置上传文件的最大尺寸位5MB -->
	 	<property name="maxUploadSize">
	 		<value>5243880</value>
	 	</property>		
	 </bean>
	 
	 <!-- 登录拦截器 -->  
	<mvc:interceptors>   
	  <mvc:interceptor>   
	    <mvc:mapping path="/user/*"/> <!-- 管理员登录拦截 -->  
	    <mvc:exclude-mapping path="/user/login.action"/>  
	    <mvc:exclude-mapping path="/user/loginSubmit.action"/>  
	    <bean class="cn.nsu.edu.qingshuyuxia.interceptor.LoginInterceptor"></bean>   
	  </mvc:interceptor>   
	</mvc:interceptors>  

</beans>
